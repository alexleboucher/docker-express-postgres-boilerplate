name: Tests & Lint
run-name: Testing ${{ github.head_ref }} ðŸ§ª

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
  workflow_dispatch:

env:
  DB_USER: postgres
  DB_PASSWORD: secret
  DB_PORT: 5432
  DB_NAME: api_db
  DB_HOST: db
  TEST_DB_HOST: localhost
  TEST_DB_NAME: test_db
  TEST_DB_PORT: 5432

jobs:
  type-check-lint-and-build:
    name: Type-check, lint & build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3

      - name: Setup node version
        uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
          cache: 'yarn'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: Cache node modules
        uses: actions/cache@v4
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Type check
        run: yarn type-check

      - name: Lint
        run: yarn lint

      - name: Build app
        run: yarn build

  tests:
    name: Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_PORT: ${{ env.TEST_DB_PORT }}
          POSTGRES_DB: ${{ env.TEST_DB_NAME }}
          POSTGRES_USER: ${{ env.DB_USER }}
          POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3

      - name: Setup node version
        uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
          cache: 'yarn'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: Cache node modules
        uses: actions/cache@v4
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run E2E tests
        run: yarn test:coverage
